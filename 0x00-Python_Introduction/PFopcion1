import random
def generateDNAorRNA(dnaLen, kind):
    """Creates randomly sequences of RNA or DNA.
       Arguments: 
       dnaLen[int]: Length of the strand.
       kind[str]: input "DNA" or "RNA" to chose the type.
       Return: 
       dnaString[str]: New sequence od DNA or RNA created""" 
    if dnaLen < 0:
        return -1
    dnaString = ""
    for i in range(dnaLen):
        randomNumber = random.randint(1, 4)
        if randomNumber == 1:
            dnaString += "A"
        elif randomNumber == 2:
            dnaString += "C"
        elif randomNumber == 3:
            dnaString += "G"
        else:
            if kind == "DNA": 
                dnaString += "T"
            else:
                dnaString += "U"

    return dnaString

def createSequence(genetic_list):
    """Creates random sequences or adds preexisting ones given by the user to genetic_list
    Arguments:
    genetic_list[list]: list filled with DNA or RNA sequences.
    Return:
    genetic_list[list]: list filled with DNA or RNA sequences."""
    
    while True:
        auto = input("Create sequence automatically? [Y/N]: ").upper()
        while auto != "Y" and auto != "N":
            print("Invalid input")
            auto = input("Create sequence automatically? [Y/N]: ").upper()
        if auto == "Y":
            kind = input("DNA or RNA strand?: ").upper()
            while kind != "DNA" and kind != "RNA":
                print("Invalid input")
                kind = input("DNA or RNA strand?: ")
            dnalen = int(input("Length of the sequence? (20 min): "))
            while dnalen < 20:
                print("Invalid input, 20 minimum")
                dnalen = int(input("Length of the sequence? (20 min): "))
            dnaString = generateDNAorRNA(dnalen, kind)
            genetic_list.append(dnaString)
            print("Sequence successfully added:", dnaString)
            return genetic_list
        else:
            user = input("Enter DNA or RNA sequence: ").upper()
            char_true = ["A", "T", "C", "G", "U"]
            is_valid = True
            for char in user:
                match char:
                    case "A":
                        continue
                    case "T":
                        continue
                    case "G":
                        continue
                    case "C":
                        continue
                    case "U":
                        continue
                    case _:
                        print("Invalid DNA/RNA")
                        is_valid = False
                        break
            if is_valid:
                genetic_list.append(user)
                print("Sequence successfully added:", user)
                return genetic_list
createSequence([])
